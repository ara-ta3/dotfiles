

function ssh-peco () {
    host=$(grep -iE '^host\s+(\w|\d)+' ~/.ssh/config | awk '{print $2}' | peco)

    if [ -n "$host" ]; then
        ssh a-tanaka@$host
    fi
}

function git-delete-non-used-branch() {
git branch --merged |grep -v master|grep -v main|grep -v $(git symbolic-ref --short HEAD)|tr -d '* '|xargs -n 1 git branch -d
}

function unix2date () {
    gdate "+%Y-%m-%d %H:%M:%S" --date "@$1"
}

function gssm () {
    (git br |grep master > /dev/null) && git switch master || git switch main
}

function slack-notify () {
    if [ -n "$SLACK_WEBHOOK_URL" ]; then
        if [ -n "$1" ]; then
            curl -X POST \
                -H 'Content-type: application/json' \
                --data "{\"text\":\"$1\"}" \
                $SLACK_WEBHOOK_URL
        else
            echo '$1 is empty'
            exit 1
        fi
    else
        echo SLACK_WEBHOOK_URL env is empty
        exit 1
    fi
}

function povo() {
    if date --version &>/dev/null; then
        if [ "$1" ]; then
            date -d "$1 +180 days" +"%Y-%m-%d"
        else
            date -d "+180 days" +"%Y-%m-%d"
        fi
    elif date -v+1d &>/dev/null; then
        if [ "$1" ]; then
            date -j -f "%Y-%m-%d" -v+180d "$1" "+%Y-%m-%d"
        else
            date -v+180d "+%Y-%m-%d"
        fi
    fi
}

function d_compose_rebuild () {
    if [ -n "$1" ]; then
        docker compose rm --force --stop $1 && docker compose up -d --build $1
    fi
}

function d_clean () {
    docker ps -aq -f status=exited -f status=dead | xargs docker rm
}

function d_clean_image () {
    docker volume rm $(docker volume ls |awk '{print $2}')
}

function d_exec () {
    if [ -n "$1" ]; then
        docker exec -it $1 bash
    fi
}
